
'dunTemplates' table - simply put, this is the actual dungeon template.  (current)
dunTemplateID - unique id for this template
    /* templateID format.  ABCDE
     *       A = site - 1:mission, 2:grav, 3:mag, 4:radar, 5:ladar, 6:ded, 7:anomaly, 8:unrated, 9:escalation
     *       B = sec - mission: 1-9 (incomplete); others - sysSec: 1=hi, 2=lo, 3=null, 4=mid;
     *       C = type - grav: ore 0-5, ice 6-9; anomaly: 1-5; mission: 1-9; mag: *see below*; ded: 1-8; ladar/radar: 1-8
     *       D = level - mission: 1-9; grav: ore 1-3, ice 0; mag: *see below*; radar: 1-norm; 2-digital(nullsec); ladar: 1; anomaly: 1-5
     *       E = faction - 0=code defined, 1=Serpentis, 2=Angel, 3=Blood, 4=Guristas, 5=Sansha, 6=Drones, 7=region sov , 8=region rat , 9=other
     *
     * NOTE:  mag sites have multiple types and levels based on other variables.
     *      types are defined as relic(1), salvage(2), and drone(3), with salvage being dominant.
     *      for hisec and losec, levels are 1-8 for relic and salvage.  there are no drone mag sites here
     *      for nullsec, relic site levels are 1-8, salvage site levels are 1-4, and drone site levels are 1-7
     *
     * NOTE:  mission sites will have types and levels based on mission data
     *      sec is 1: 1.0-0.9, 2: 0.8-0.7, 3: 0.6-0.5, 4: 0.4-0.3, 5: 0.2-0.0, 6: -0.1--0.2, 7: -0.3--0.4, 8: -0.5--0.7, 9: -0.8--0.9
     *      type will follow roomType as follows:
     *           1:combat, 2:rescue, 3:capture, 4:salvage, 5:relic, 6:hacking, 7:roids, 8:clouds, 9:recon
     *      level is 1:mission, 2:grav, 3:mag, 4:radar, 5:ladar, 6:ded, 7:anomaly, 8:unrated, 9:escalation
     */
dunTemplateName - name for this template
dunSpawnID - spawn template to be used.  can be null.  see npcSpawnClass table for details
dunRoomID - room template ID for this dungeon.
dunEntryID - warp-in point template (if non-zero)


'dunRoomData' table - this table contains one or more group templates and its relative position to define a given room.
dunRoomID - room id this template.  each ID can have mutiple entries
dunGroupID - groupID (template) for this room
x,y,z - coord offset of this itemGroup based on 'origin point' of dungeon being 0,0,0

'dunRoomInfo' table - room template info table
dunRoomID - room id with items/groups defined in dunRoomData table
    /* roomID format.  ABCD
     *      A = roomtype - 1:combat, 2:rescue, 3:capture, 4:salvage, 5:relic, 6:hacking, 7:roids, 8:clouds, 9:recon
     *      B = level -  0:none, 1:f, 2:d, 3:c, 4:af/ad, 5:bc, 6:ac, 7:bs, 8:abs, 9:hard
     *      C = amount/size - 0:code defined 1:small(1-5), 2:medium(2-10), 3:large(5-25), 4:enormous(10-50), 5:colossal(20-100), 6-9:ice
     *      D = sublevel - 0:gas, 1-5:ore, 6-9:ice
     */
dunRoomName - name identifying (or describing) the room
dunRoomSpawnID - spawn template id (types, pos, qty) to be used for this room (maybe null).  uses ratspawn format


'dunGroupData' table - this type and position table will contain item types used to define a common theme.
dunGroupID - group id of this template. each ID can have mutiple entries
typeID - item typeID defined for this group
groupID - item groupID defined for this group.  overrides typeID if not null
x,y,z - coord offset of this item

'dunGroupInfo' table - crossreference for group data in roomID. (for info only.  not used in code)
dunGroupID - group id as defined in dunGroupData table
/* groupID format
      ABB - item def groups
   A = group type - 1:deco, 2:system effect beacon, 3:mining, 4:lco, 5:ships, 6:base, 7:station gun, 8:station wrecks, 9:misc
   B =  1:space objects, 2:effect beacons, 3:roid types, 4:ice types, 5:, 6:asteroid colony, 7:, 8:, 9:misc
   B = ship/gun faction:  1:Amarr, 2:Caldari, 3:Gallente, 4:Minmatar, 5:Sentinel, 6:Guardian
   B =  faction:  00:none, 01:Serpentis, 02:Angel, 03:Blood, 04:Guristas, 05:Sansha, 06:Drones, 07:Amarr, 08:Caldari, 09:Gallente,
                  10:Minmatar, 11:Sleeper, 12:Talocan, 13:Ammatar
*/
dunGroupName - name identifying or describing this room group



** THE FOLLOWING TABLES HAVE NOT BEEN STARTED, AND ARE CURRENTLY NOT USED **

'dunSpawnData' table - crossreference for type and group data for roomID.
dunSpawnID - spawn id of this template (listed as 'type' in roid rat class)
    /* spawnID format.  AB
     *      A = level -  1:f, 2:d, 3:c, 4:af/ad, 5:bc, 6:ac, 7:bs, 8:abs, 9:hard
     *      B = faction - 0=code defined, 1=Serpentis, 2=Angel, 3=Blood, 4=Guristas, 5=Sansha, 6=Drones, 7=region sov, 8=region pirate, 9=other
     */
dunSpawnName - name identifying or describing this Spawn group
dunSpawnType - the (unique, internal) 'type' of this Spawn (wip)
x,y,z - spawn origin
**data here follows roid_rat_class.sql structure for determining ship classes**


'dunSpawnType' table - this table will list faction and ship groups for this dungeon
dunSpawnTypeID - type id of this template (listed as 'shipClass' in roid rats)
**data here follows roid_rats.sql structure for determining ship factions and groups**


'dunEntryID' table - template for warp in point for this dungeon.
dunEntryID - unique id for this warp in template.
dunEntryName - name for this warp in template. (may not use...)
x,y,z - coord offset for warp in.


** will this be used or are dungeons fully dynamic?
'dunActive' table - currently active dungeons (this is all dungeons, for whatever reason)
systemID - solar system id (to avoid cross-system position errors)
dungeonID - server generated unique dungeonID (bigint(20))
dunTemplateID - template id
dunExpiryTime - timestamp of when dungeon expires
state - internal state variable. pristine, started, partial, inactive, abandoned, completed, more...

